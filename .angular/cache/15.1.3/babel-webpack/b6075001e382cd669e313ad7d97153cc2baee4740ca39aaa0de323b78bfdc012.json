{"ast":null,"code":"import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { onChildAdded, onChildRemoved, onChildChanged, onChildMoved, onValue, off, get as get$1 } from 'firebase/database';\nimport { __assign, __spreadArray } from 'tslib';\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nvar ListenEvent;\n(function (ListenEvent) {\n  ListenEvent[\"added\"] = \"child_added\";\n  ListenEvent[\"removed\"] = \"child_removed\";\n  ListenEvent[\"changed\"] = \"child_changed\";\n  ListenEvent[\"moved\"] = \"child_moved\";\n  ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\nvar ListenerMethods = Object.freeze((_a = {}, _a[ListenEvent.added] = onChildAdded, _a[ListenEvent.removed] = onChildRemoved, _a[ListenEvent.changed] = onChildChanged, _a[ListenEvent.moved] = onChildMoved, _a[ListenEvent.value] = onValue, _a));\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nfunction fromRef(ref, event) {\n  return new Observable(function (subscriber) {\n    var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n      subscriber.next({\n        snapshot: snapshot,\n        prevKey: prevKey,\n        event: event\n      });\n    }, subscriber.error.bind(subscriber));\n    return {\n      unsubscribe: function () {\n        off(ref, event, fn);\n      }\n    };\n  }).pipe(\n  // Ensures subscribe on observable is async. This handles\n  // a quirk in the SDK where on/once callbacks can happen\n  // synchronously.\n  delay(0));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nfunction validateEventsArray(events) {\n  if (events == null || events.length === 0) {\n    events = [ListenEvent.added, ListenEvent.removed, ListenEvent.changed, ListenEvent.moved];\n  }\n  return events;\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nfunction object(query) {\n  return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction objectVal(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return fromRef(query, ListenEvent.value).pipe(map(function (change) {\n    return changeToData(change, options);\n  }));\n}\nfunction changeToData(change, options) {\n  var _a;\n  if (options === void 0) {\n    options = {};\n  }\n  var val = change.snapshot.val();\n  // match the behavior of the JS SDK when the snapshot doesn't exist\n  if (!change.snapshot.exists()) {\n    return val;\n  }\n  // val can be a primitive type\n  if (typeof val !== 'object') {\n    return val;\n  }\n  return __assign(__assign({}, val), options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null);\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction stateChanges(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var events = validateEventsArray(options.events);\n  var childEvent$ = events.map(function (event) {\n    return fromRef(query, event);\n  });\n  return merge.apply(void 0, childEvent$);\n}\nfunction get(query) {\n  return from(get$1(query)).pipe(map(function (snapshot) {\n    var event = ListenEvent.value;\n    return {\n      snapshot: snapshot,\n      prevKey: null,\n      event: event\n    };\n  }));\n}\nfunction list(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var events = validateEventsArray(options.events);\n  return get(query).pipe(switchMap(function (change) {\n    if (!change.snapshot.exists()) {\n      return of([]);\n    }\n    var childEvent$ = [of(change)];\n    events.forEach(function (event) {\n      childEvent$.push(fromRef(query, event));\n    });\n    return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction listVal(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return list(query).pipe(map(function (arr) {\n    return arr.map(function (change) {\n      return changeToData(change, options);\n    });\n  }));\n}\nfunction positionFor(changes, key) {\n  var len = changes.length;\n  for (var i = 0; i < len; i++) {\n    if (changes[i].snapshot.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction positionAfter(changes, prevKey) {\n  if (prevKey == null) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\nfunction buildView(current, change) {\n  var snapshot = change.snapshot,\n    prevKey = change.prevKey,\n    event = change.event;\n  var key = snapshot.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n  switch (event) {\n    case ListenEvent.value:\n      if (change.snapshot && change.snapshot.exists()) {\n        var prevKey_1 = null;\n        change.snapshot.forEach(function (snapshot) {\n          var action = {\n            snapshot: snapshot,\n            event: ListenEvent.value,\n            prevKey: prevKey_1\n          };\n          prevKey_1 = snapshot.key;\n          current = __spreadArray(__spreadArray([], current), [action]);\n          return false;\n        });\n      }\n      return current;\n    case ListenEvent.added:\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        var previous = current[currentKeyPosition - 1];\n        if ((previous && previous.snapshot.key || null) !== prevKey) {\n          current = current.filter(function (x) {\n            return x.snapshot.key !== snapshot.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, change);\n        }\n      } else if (prevKey == null) {\n        return __spreadArray([change], current);\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, change);\n      }\n      return current;\n    case ListenEvent.removed:\n      return current.filter(function (x) {\n        return x.snapshot.key !== snapshot.key;\n      });\n    case ListenEvent.changed:\n      return current.map(function (x) {\n        return x.snapshot.key === key ? change : x;\n      });\n    case ListenEvent.moved:\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction auditTrail(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) {\n    return __spreadArray(__spreadArray([], current), [changes]);\n  }, []));\n  return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n    // Store the last key in the data set\n    var lastKeyToLoad;\n    // Loop through loaded dataset to find the last key\n    data.snapshot.forEach(function (child) {\n      lastKeyToLoad = child.key;\n      return false;\n    });\n    // return data set and the current last key loaded\n    return {\n      data: data,\n      lastKeyToLoad: lastKeyToLoad\n    };\n  }));\n}\nfunction waitForLoaded(query, snap$) {\n  var loaded$ = loadedData(query);\n  return loaded$.pipe(withLatestFrom(snap$),\n  // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(function (_a) {\n    var loaded = _a[0],\n      changes = _a[1];\n    // Store the last key in the data set\n    var lastKeyToLoad = loaded.lastKeyToLoad;\n    // Store all child keys loaded at this point\n    var loadedKeys = changes.map(function (change) {\n      return change.snapshot.key;\n    });\n    return {\n      changes: changes,\n      lastKeyToLoad: lastKeyToLoad,\n      loadedKeys: loadedKeys\n    };\n  }),\n  // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(function (meta) {\n    return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n  }),\n  // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(function (meta) {\n    return meta.changes;\n  }));\n}\nexport { ListenEvent, ListenerMethods, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };","map":{"version":3,"names":["Observable","merge","from","of","delay","map","switchMap","scan","distinctUntilChanged","withLatestFrom","skipWhile","onChildAdded","onChildRemoved","onChildChanged","onChildMoved","onValue","off","get","get$1","__assign","__spreadArray","_a","ListenEvent","ListenerMethods","Object","freeze","added","removed","changed","moved","value","fromRef","ref","event","subscriber","fn","snapshot","prevKey","next","error","bind","unsubscribe","pipe","validateEventsArray","events","length","object","query","objectVal","options","change","changeToData","val","exists","keyField","key","stateChanges","childEvent$","apply","list","forEach","push","buildView","listVal","arr","positionFor","changes","len","i","positionAfter","current","currentKeyPosition","afterPreviousKeyPosition","undefined","prevKey_1","action","previous","filter","x","splice","slice","data","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","snap$","loaded$","loaded","loadedKeys","meta","indexOf"],"sources":["C:/Users/Logan/Sheetz/node_modules/rxfire/database/index.esm.js"],"sourcesContent":["import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { onChildAdded, onChildRemoved, onChildChanged, onChildMoved, onValue, off, get as get$1 } from 'firebase/database';\nimport { __assign, __spreadArray } from 'tslib';\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nvar ListenEvent;\n(function (ListenEvent) {\n    ListenEvent[\"added\"] = \"child_added\";\n    ListenEvent[\"removed\"] = \"child_removed\";\n    ListenEvent[\"changed\"] = \"child_changed\";\n    ListenEvent[\"moved\"] = \"child_moved\";\n    ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\nvar ListenerMethods = Object.freeze((_a = {},\n    _a[ListenEvent.added] = onChildAdded,\n    _a[ListenEvent.removed] = onChildRemoved,\n    _a[ListenEvent.changed] = onChildChanged,\n    _a[ListenEvent.moved] = onChildMoved,\n    _a[ListenEvent.value] = onValue,\n    _a));\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nfunction fromRef(ref, event) {\n    return new Observable(function (subscriber) {\n        var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey, event: event });\n        }, subscriber.error.bind(subscriber));\n        return {\n            unsubscribe: function () {\n                off(ref, event, fn);\n            }\n        };\n    }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nfunction validateEventsArray(events) {\n    if (events == null || events.length === 0) {\n        events = [\n            ListenEvent.added,\n            ListenEvent.removed,\n            ListenEvent.changed,\n            ListenEvent.moved\n        ];\n    }\n    return events;\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nfunction object(query) {\n    return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction objectVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return fromRef(query, ListenEvent.value).pipe(map(function (change) { return changeToData(change, options); }));\n}\nfunction changeToData(change, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var val = change.snapshot.val();\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    if (!change.snapshot.exists()) {\n        return val;\n    }\n    // val can be a primitive type\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, val), (options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction stateChanges(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return merge.apply(void 0, childEvent$);\n}\nfunction get(query) {\n    return from(get$1(query)).pipe(map(function (snapshot) {\n        var event = ListenEvent.value;\n        return { snapshot: snapshot, prevKey: null, event: event };\n    }));\n}\nfunction list(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    return get(query).pipe(switchMap(function (change) {\n        if (!change.snapshot.exists()) {\n            return of([]);\n        }\n        var childEvent$ = [of(change)];\n        events.forEach(function (event) {\n            childEvent$.push(fromRef(query, event));\n        });\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction listVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return list(query).pipe(map(function (arr) {\n        return arr.map(function (change) { return changeToData(change, options); });\n    }));\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].snapshot.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (prevKey == null) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, change) {\n    var snapshot = change.snapshot, prevKey = change.prevKey, event = change.event;\n    var key = snapshot.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n    switch (event) {\n        case ListenEvent.value:\n            if (change.snapshot && change.snapshot.exists()) {\n                var prevKey_1 = null;\n                change.snapshot.forEach(function (snapshot) {\n                    var action = {\n                        snapshot: snapshot,\n                        event: ListenEvent.value,\n                        prevKey: prevKey_1\n                    };\n                    prevKey_1 = snapshot.key;\n                    current = __spreadArray(__spreadArray([], current), [action]);\n                    return false;\n                });\n            }\n            return current;\n        case ListenEvent.added:\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                var previous = current[currentKeyPosition - 1];\n                if (((previous && previous.snapshot.key) || null) !== prevKey) {\n                    current = current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n                    current.splice(afterPreviousKeyPosition, 0, change);\n                }\n            }\n            else if (prevKey == null) {\n                return __spreadArray([change], current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, change);\n            }\n            return current;\n        case ListenEvent.removed:\n            return current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n        case ListenEvent.changed:\n            return current.map(function (x) { return (x.snapshot.key === key ? change : x); });\n        case ListenEvent.moved:\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction auditTrail(query, options) {\n    if (options === void 0) { options = {}; }\n    var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) { return __spreadArray(__spreadArray([], current), [changes]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n        // Store the last key in the data set\n        var lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.snapshot.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, snap$) {\n    var loaded$ = loadedData(query);\n    return loaded$.pipe(withLatestFrom(snap$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(function (_a) {\n        var loaded = _a[0], changes = _a[1];\n        // Store the last key in the data set\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        var loadedKeys = changes.map(function (change) { return change.snapshot.key; });\n        return { changes: changes, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(function (meta) {\n        return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n    }), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(function (meta) { return meta.changes; }));\n}\n\nexport { ListenEvent, ListenerMethods, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}