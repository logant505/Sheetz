{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport * as i3 from '@angular/fire/app-check';\nimport firebase from 'firebase/compat/app';\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n  return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n  return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n  return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let fn = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({\n          snapshot,\n          prevKey\n        });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        unsubscribe() {}\n      };\n    }\n  }).pipe(map(payload => {\n    const {\n      snapshot,\n      prevKey\n    } = payload;\n    let key = null;\n    if (snapshot.exists()) {\n      key = snapshot.key;\n    }\n    return {\n      type: event,\n      payload: snapshot,\n      prevKey,\n      key\n    };\n  }), share());\n}\nfunction listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n    const childEvent$ = [of(snapshotAction)];\n    events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n    return merge(...childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\nfunction buildView(current, action) {\n  const {\n    payload,\n    prevKey,\n    key\n  } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {\n            payload,\n            type: 'value',\n            prevKey,\n            key: payload.key\n          };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\nfunction validateEventsArray(events) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\nfunction snapshotChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  return listChanges(query, events, scheduler);\n}\nfunction stateChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\nfunction auditTrail(query, events, scheduler) {\n  const auditTrail$ = stateChanges(query, events).pipe(scan((current, action) => [...current, action], []));\n  return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, 'value', 'on', scheduler).pipe(map(data => {\n    // Store the last key in the data set\n    let lastKeyToLoad;\n    // Loop through loaded dataset to find the last key\n    data.payload.forEach(child => {\n      lastKeyToLoad = child.key;\n      return false;\n    });\n    // return data set and the current last key loaded\n    return {\n      data,\n      lastKeyToLoad\n    };\n  }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n  const loaded$ = loadedData(query, scheduler);\n  return loaded$.pipe(withLatestFrom(action$),\n  // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(([loaded, actions]) => {\n    // Store the last key in the data set\n    const lastKeyToLoad = loaded.lastKeyToLoad;\n    // Store all child keys loaded at this point\n    const loadedKeys = actions.map(snap => snap.key);\n    return {\n      actions,\n      lastKeyToLoad,\n      loadedKeys\n    };\n  }),\n  // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n  // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(meta => meta.actions));\n}\nfunction createDataOperationMethod(ref, operation) {\n  return function dataOperation(item, value) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item)[operation](value),\n      firebaseCase: () => item[operation](value),\n      snapshotCase: () => item.ref[operation](value)\n    });\n  };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n  return function remove(item) {\n    if (!item) {\n      return ref.remove();\n    }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item).remove(),\n      firebaseCase: () => item.remove(),\n      snapshotCase: () => item.ref.remove()\n    });\n  };\n}\nfunction createListReference(query, afDatabase) {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod(refInZone, 'update'),\n    set: createDataOperationMethod(refInZone, 'set'),\n    push: data => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events) {\n      return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    stateChanges(events) {\n      return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    auditTrail(events) {\n      return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    valueChanges(events, options) {\n      const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(map(actions => actions.map(a => {\n        if (options && options.idField) {\n          return Object.assign(Object.assign({}, a.payload.val()), {\n            [options.idField]: a.key\n          });\n        } else {\n          return a.payload.val();\n        }\n      })), keepUnstableUntilFirst);\n    }\n  };\n}\nfunction createObjectSnapshotChanges(query, scheduler) {\n  return function snapshotChanges() {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\nfunction createObjectReference(query, afDatabase) {\n  return {\n    query,\n    snapshotChanges() {\n      return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n    },\n    update(data) {\n      return query.ref.update(data);\n    },\n    set(data) {\n      return query.ref.set(data);\n    },\n    remove() {\n      return query.ref.remove();\n    },\n    valueChanges() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n    }\n  };\n}\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n  constructor(options, name, databaseURL,\n  // tslint:disable-next-line:ban-types\n  platformId, zone, schedulers, _useEmulator,\n  // tuple isn't working here\n  auth, useAuthEmulator, authSettings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    this.schedulers = schedulers;\n    const useEmulator = _useEmulator;\n    const app = ɵfirebaseAppFactory(options, zone, name);\n    if (auth) {\n      ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n    this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n      return database;\n    }, [useEmulator]);\n  }\n  list(pathOrRef, queryFn) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference(query, this);\n  }\n  object(pathOrRef) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference(ref, this);\n  }\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n}\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) {\n  return new (t || AngularFireDatabase)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n};\nAngularFireDatabase.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularFireDatabase,\n  factory: AngularFireDatabase.ɵfac,\n  providedIn: 'any'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FIREBASE_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FIREBASE_APP_NAME]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [URL]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.ɵAngularFireSchedulers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR]\n      }]\n    }, {\n      type: i2.AngularFireAuth,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR$1]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SETTINGS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TENANT_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LANGUAGE_CODE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_DEVICE_LANGUAGE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PERSISTENCE]\n      }]\n    }, {\n      type: i3.AppCheckInstances,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nclass AngularFireDatabaseModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n  }\n}\nAngularFireDatabaseModule.ɵfac = function AngularFireDatabaseModule_Factory(t) {\n  return new (t || AngularFireDatabaseModule)();\n};\nAngularFireDatabaseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularFireDatabaseModule\n});\nAngularFireDatabaseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularFireDatabase]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireDatabase]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };","map":{"version":3,"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","asyncScheduler","Observable","of","merge","map","share","switchMap","scan","distinctUntilChanged","withLatestFrom","skipWhile","i1","keepUnstableUntilFirst","VERSION","ɵfirebaseAppFactory","ɵcacheInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","ɵauthFactory","USE_EMULATOR","USE_EMULATOR$1","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","i3","firebase","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","undefined","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","fromRef","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","pipe","payload","key","exists","type","listChanges","events","snapshotAction","childEvent$","forEach","push","buildView","positionFor","changes","len","length","i","positionAfter","current","action","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","valueChanges","options","snapshotChanges$","a","idField","Object","assign","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","constructor","name","databaseURL","platformId","zone","_useEmulator","auth","useAuthEmulator","authSettings","tenantId","languageCode","useDeviceLanguage","persistence","_appCheckInstances","useEmulator","app","runOutsideAngular","list","pathOrRef","queryFn","object","createPushId","ɵfac","NgZone","ɵAngularFireSchedulers","AngularFireAuth","AppCheckInstances","ɵprov","args","providedIn","decorators","AngularFireDatabaseModule","registerVersion","full","ɵmod","ɵinj","providers"],"sources":["C:/Users/Logan/Sheetz/node_modules/@angular/fire/fesm2015/angular-fire-compat-database.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport * as i3 from '@angular/fire/app-check';\nimport firebase from 'firebase/compat/app';\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType === 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType === 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return {\n                unsubscribe() {\n                }\n            };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) !== prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\nfunction validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n\nfunction stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        // Store the last key in the data set\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n\nfunction createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n    return {\n        query,\n        update: createDataOperationMethod(refInZone, 'update'),\n        set: createDataOperationMethod(refInZone, 'set'),\n        push: (data) => refInZone.push(data),\n        remove: createRemoveMethod(refInZone),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        valueChanges(events, options) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map(actions => actions.map(a => {\n                if (options && options.idField) {\n                    return Object.assign(Object.assign({}, a.payload.val()), {\n                        [options.idField]: a.key\n                    });\n                }\n                else {\n                    return a.payload.val();\n                }\n            })), keepUnstableUntilFirst);\n        }\n    };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n    constructor(options, name, databaseURL, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n    auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n        this.schedulers = schedulers;\n        const useEmulator = _useEmulator;\n        const app = ɵfirebaseAppFactory(options, zone, name);\n        if (auth) {\n            ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n        }\n        this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n            const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n            if (useEmulator) {\n                database.useEmulator(...useEmulator);\n            }\n            return database;\n        }, [useEmulator]);\n    }\n    list(pathOrRef, queryFn) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n        return ref.push().key;\n    }\n}\nAngularFireDatabase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: URL, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: i2.AngularFireAuth, optional: true }, { token: USE_EMULATOR$1, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i3.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nAngularFireDatabase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, providedIn: 'any' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [URL]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: i2.AngularFireAuth, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR$1]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SETTINGS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TENANT_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LANGUAGE_CODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_DEVICE_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PERSISTENCE]\n                }] }, { type: i3.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nclass AngularFireDatabaseModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n    }\n}\nAngularFireDatabaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularFireDatabaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule });\nAngularFireDatabaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, providers: [AngularFireDatabase] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireDatabase]\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}