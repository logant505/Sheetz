{"ast":null,"code":"import { environment } from \"src/environments/environment.prod\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"https://identitytoolkit.googleapis.com/v1/accounts\";\n    this.signUpEndpoint = \"signInWithCustomToken\";\n    this.signInEndpoint = \"signInWithPassword\";\n  }\n  signUp(email, password) {\n    const requestBody = {\n      \"email\": email,\n      \"password\": password,\n      \"returnSecureToken\": true\n    };\n    return this.http.post(this.baseUrl + ':' + this.signUpEndpoint + '?' + 'key=' + environ, requestBody);\n  }\n  login(email, password) {\n    const requestBody = {\n      \"email\": email,\n      \"password\": password,\n      \"returnSecureToken\": true\n    };\n    return this.http.post(this.baseUrl + ':' + this.signInEndpoint + '?' + 'key=' + environment.firebase.apiKey, requestBody);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,mCAAmC;;;AAK/D,OAAM,MAAOC,WAAW;EAIpBC,YAA2BC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAH/B,YAAO,GAAQ,oDAAoD;IACnE,mBAAc,GAAQ,uBAAuB;IAC7C,mBAAc,GAAQ,oBAAoB;EAG1C;EACOC,MAAM,CAACC,KAAY,EAAEC,QAAe;IACvC,MAAMC,WAAW,GAAC;MACd,OAAO,EAAEF,KAAK;MACd,UAAU,EAACC,QAAQ;MACnB,mBAAmB,EAAC;KACvB;IAEH,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAe,IAAI,CAACC,OAAO,GAAC,GAAG,GAAC,IAAI,CAACC,cAAc,GAAC,GAAG,GAAC,MAAM,GAACC,OAAO,EAACJ,WAAW,CAAC;EAC1G;EACOK,KAAK,CAACP,KAAY,EAACC,QAAe;IACrC,MAAMC,WAAW,GAAC;MACd,OAAO,EAAEF,KAAK;MACd,UAAU,EAACC,QAAQ;MACnB,mBAAmB,EAAC;KACvB;IAED,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAe,IAAI,CAACC,OAAO,GAAC,GAAG,GAAC,IAAI,CAACI,cAAc,GAAC,GAAG,GAAC,MAAM,GAACb,WAAW,CAACc,QAAQ,CAACC,MAAM,EAACR,WAAW,CAAC;EAChI;;AAxBSN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFR;AAAM","names":["environment","AuthService","constructor","http","signUp","email","password","requestBody","post","baseUrl","signUpEndpoint","environ","login","signInEndpoint","firebase","apiKey","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Logan\\Sheetz\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment.prod\";\r\nimport { AuthResponse } from \"./authResponse\";\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n    baseUrl:string=\"https://identitytoolkit.googleapis.com/v1/accounts\";\r\n    signUpEndpoint:string=\"signInWithCustomToken\";\r\n    signInEndpoint:string=\"signInWithPassword\";\r\n    public constructor(private http:HttpClient){\r\n\r\n    }\r\n    public signUp(email:string, password:string){\r\n        const requestBody={\r\n            \"email\": email,\r\n            \"password\":password,\r\n            \"returnSecureToken\":true\r\n        };\r\n\r\n      return this.http.post<AuthResponse>(this.baseUrl+':'+this.signUpEndpoint+'?'+'key='+environ,requestBody);\r\n    }\r\n    public login(email:string,password:string){\r\n        const requestBody={\r\n            \"email\": email,\r\n            \"password\":password,\r\n            \"returnSecureToken\":true\r\n        };\r\n\r\n        return this.http.post<AuthResponse>(this.baseUrl+':'+this.signInEndpoint+'?'+'key='+environment.firebase.apiKey,requestBody);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}